<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Wishlist</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!-- Add SweetAlert CDN -->
    <style>
        /* Basic Styles for Wishlist Page */
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9f9f9;
        }

        .size{
            text-align: left;
            font-size: 25px;
            margin-left:10px;
            margin-top:10px;
        }

        .wishlist-products {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            padding: 20px;
        }

        .product-card {
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            border-radius: 8px;
            width: 250px;
            text-align: center;
            transition: transform 0.3s ease-in-out;
        }

        .product-card:hover {
            transform: scale(1.05);
        }

        .product-card img {
            width: 100%;
            height: 180px;
            object-fit: cover;
            border-radius: 8px;
        }

        .product-card h3 {
            margin: 15px 0;
            font-size: 18px;
            color: #333;
        }

        .product-card p {
            color: #888;
            margin: 10px 0;
        }

        .product-card a {
            display: inline-block;
            padding: 10px 15px;
            background-color: #007bff;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 10px;
        }

        .product-card a:hover {
            background-color: #0056b3;
        }

        /* Optional: Styles for Empty Wishlist */
        .empty-wishlist {
            text-align: center;
            color: #888;
            font-size: 18px;
            margin-top: 40px;
        }
    </style>
</head>
<%- include('../../partials/header') %>
<body>

    <h1 class="size">Your Wishlist</h1>

    <div class="wishlist-products">
        <% if (products && products.length > 0) { %>
            <% products.forEach(product => { %>
                <div class="product-card">
                    <img src="<%= product.images[0] %>" alt="<%= product.name %>">
                    <h3><%= product.name %></h3>
                    <p>â‚¹<%= product.price %></p>
                    <button onclick="addToCart('<%= product._id %>')" 
                        style="padding: 10px 15px; background-color: #007bff; color: #fff; border: none; border-radius: 5px; cursor: pointer;">
                        Add to Cart
                    </button>
                    
                    <form id="remove-form-<%= product._id %>" style="margin-top:10px;"> 
                        <button type="button" onclick="removeProduct('<%= product._id %>')" 
                            style="padding : 5px 10px; background-color: red; color: white; border:none; border-radius:5px; cursor:pointer;">Remove</button>
                    </form>
                    
                </div>
            <% }) %>
        <% } else { %>
            <p class="empty-wishlist">Your wishlist is empty!</p>
        <% } %>
    </div>

    <script>
        const removeProduct = async (productId) => {
            try {
                const response = await fetch(`/wishlist/remove/${productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Product Removed',
                        text: 'Product removed successfully!',
                    });
                    location.reload();
                } else {
                    const error = await response.json();
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: `Error: ${error.message}`,
                    });
                }
            } catch (err) {
                console.error('Error', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while removing the product.',
                });
            }
        };

        const addToCart = async (productId) => {
            try {
                const response = await fetch('/add-to-cart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });

                if (response.ok) {
                    window.location.href = '/cart';
                } else {
                    const error = await response.json();
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: `Error: ${error.message}`,
                    });
                }
            } catch (err) {
                console.error('Error:', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while adding to cart.',
                });
            }
        };
    </script>

</body>
</html>
